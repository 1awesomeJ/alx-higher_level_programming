"""

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]
>>> matrix_mul(88, [58, 4])
Traceback (most recent call last):
...
TypeError: m_a must be a list
>>> matrix_mul([58, 4], 88)
Traceback (most recent call last):
...
TypeError: m_b must be a list
>>> matrix_mul([88], [58, 4])
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists
>>> matrix_mul([[88, 4]], [58])
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists
>>> matrix_mul([88], [[]])
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists
>>> matrix_mul([[]], [[88, 8], [5, 9]])
Traceback (most recent call last):
...
ValueError: m_a can't be empty
>>> matrix_mul([[88, 8], [5, 9]], [[]])
Traceback (most recent call last):
...
ValueError: m_b can't be empty
>>> matrix_mul([["boy"]], [[88, 8], [5, 9]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats
>>> matrix_mul([[88, 8], [5, 9]], [["boy"]])
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats
>>> matrix_mul([[88], [5, 9]], [[6, 8], [8, 9]])
Traceback (most recent call last):
...
TypeError: each row of m_a must be of the same size
>>> matrix_mul([[88, 8], [5, 9]], [[6, 8], [9]])
Traceback (most recent call last):
...
TypeError: each row of m_b must be of the same size
>>> matrix_mul([[88, 8], [5, 9]], [[6, 8], [5, 9], [3,7]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied
>>> matrix_mul([[2,3], [3,4]])
Traceback (most recent call last):
...
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'
>>> matrix_mul()
Traceback (most recent call last):
...
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

"""
